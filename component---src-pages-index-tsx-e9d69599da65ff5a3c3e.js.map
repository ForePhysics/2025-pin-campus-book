{"version":3,"file":"component---src-pages-index-tsx-e9d69599da65ff5a3c3e.js","mappings":"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","sources":["webpack://2025-pin-campus-book/./src/components/Layout.tsx","webpack://2025-pin-campus-book/./src/components/Banner.tsx","webpack://2025-pin-campus-book/./src/components/SectionHeader.tsx","webpack://2025-pin-campus-book/./src/components/TutorialItem.tsx","webpack://2025-pin-campus-book/./src/components/ProcessItem.tsx","webpack://2025-pin-campus-book/./src/components/MemberItem.tsx","webpack://2025-pin-campus-book/./src/pages/index.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\r\nimport '../styles/global.scss';\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Layout: FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <div className=\"layout\">\r\n      <main className=\"container\">\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// 导入 React 库和必要的 hooks\r\nimport React, { FC, useState, useEffect } from 'react';\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nimport Image1 from '../images/banner-image1.jpg';\r\nimport Image2 from '../images/banner-image2.jpg';\r\nimport Image3 from '../images/banner-image3.jpg';\r\nimport Image4 from '../images/banner-image4.jpg';\r\nimport Image5 from '../images/banner-image5.jpg';\r\n\r\n// 定义轮播图片数据接口\r\ninterface CarouselImage {\r\n  id: number;\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\n// 定义 Banner 函数组件\r\nconst Banner: FC = () => {\r\n  // 定义轮播图片数据数组（使用占位图片）\r\n  const carouselImages: CarouselImage[] = [\r\n    {\r\n      id: 1,\r\n      src: withPrefix(\"/images/banner-image1.jpg\"),\r\n      alt: 'Banner Image 1'\r\n    },\r\n    {\r\n      id: 2,\r\n      src: withPrefix(\"/images/banner-image2.jpg\"),\r\n      alt: 'Banner Image 2'\r\n    },\r\n    {\r\n      id: 3,\r\n      src: withPrefix(\"/images/banner-image3.jpg\"),\r\n      alt: 'Banner Image 3'\r\n    },\r\n    {\r\n      id: 4,\r\n      src: withPrefix(\"/images/banner-image4.jpg\"),\r\n      alt: 'Banner Image 4'\r\n    },\r\n    {\r\n      id: 5,\r\n      src: withPrefix(\"/images/banner-image5.jpg\"),\r\n      alt: 'Banner Image 5'\r\n    }\r\n  ];\r\n\r\n\r\n  \r\n  // 使用 useState 管理当前显示的图片索引\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  // 使用 useEffect 实现自动轮播\r\n  useEffect(() => {\r\n    // 设置定时器，每3秒切换到下一张图片\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) => \r\n        // 如果是最后一张图片，则回到第一张；否则切换到下一张\r\n        prevIndex === carouselImages.length - 1 ? 0 : prevIndex + 1\r\n      );\r\n    }, 5000); // 3秒间隔\r\n\r\n    // 清理函数：组件卸载时清除定时器\r\n    return () => clearInterval(interval);\r\n  }, [carouselImages.length]); // 依赖数组包含图片数量\r\n\r\n  // 手动切换到指定图片的函数\r\n  const goToSlide = (index: number) => {\r\n    setCurrentImageIndex(index);\r\n  };\r\n\r\n  // 切换到上一张图片的函数\r\n  const goToPrevious = () => {\r\n    setCurrentImageIndex(\r\n      currentImageIndex === 0 ? carouselImages.length - 1 : currentImageIndex - 1\r\n    );\r\n  };\r\n\r\n  // 切换到下一张图片的函数\r\n  const goToNext = () => {\r\n    setCurrentImageIndex(\r\n      currentImageIndex === carouselImages.length - 1 ? 0 : currentImageIndex + 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    // 最外层 div，代表整个 Banner 区域\r\n    <div className=\"banner\">\r\n      {/* 轮播容器 */}\r\n      <div className=\"banner-carousel\">\r\n        {/* 图片容器，使用 transform 实现滑动效果 */}\r\n        <div \r\n          className=\"banner-images\"\r\n          style={{\r\n            transform: `translateX(-${currentImageIndex * 100}%)`,\r\n            transition: 'transform 0.5s ease-in-out'\r\n          }}\r\n        >\r\n          {/* 遍历图片数组，渲染每张图片 */}\r\n          {carouselImages.map((image) => (\r\n            <div key={image.id} className=\"banner-image\">\r\n              <img \r\n                src={image.src} \r\n                alt={image.alt}\r\n                loading=\"lazy\" // 懒加载优化\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 导航按钮 */}\r\n        <button \r\n          className=\"banner-nav banner-nav-prev\"\r\n          onClick={goToPrevious}\r\n          aria-label=\"Previous image\"\r\n        >\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n            <path d=\"M15 18L9 12L15 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n        \r\n        <button \r\n          className=\"banner-nav banner-nav-next\"\r\n          onClick={goToNext}\r\n          aria-label=\"Next image\"\r\n        >\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n            <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n\r\n        {/* 指示器（小圆点） */}\r\n        <div className=\"banner-indicators\">\r\n          {carouselImages.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className={`banner-indicator ${index === currentImageIndex ? 'active' : ''}`}\r\n              onClick={() => goToSlide(index)}\r\n              aria-label={`Go to slide ${index + 1}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Banner 文本内容叠加层 */}\r\n      <div className=\"banner-content\">\r\n        <div className=\"banner-text\">\r\n          <h1 className=\"banner-title\">Pin Campus Book</h1>\r\n          <p className=\"banner-subtitle\">上科大2025届新生纪念可交互礼物</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 导出 Banner 组件\r\nexport default Banner;\r\n","import React, { FC } from 'react';\r\n\r\ninterface SectionHeaderProps {\r\n  title: string;\r\n  showArrow?: boolean;\r\n}\r\n\r\nconst SectionHeader: FC<SectionHeaderProps> = ({ title, showArrow = false }) => {\r\n  return (\r\n    <div className=\"section-header\">\r\n      <h2 className=\"section-title\">\r\n        {title}\r\n        {showArrow && <span className=\"section-arrow\">→</span>}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;","import React, { FC } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\ninterface TutorialItemProps {\r\n  title: string;\r\n  description: string;\r\n  linkTo?: string;\r\n}\r\n\r\nconst TutorialItem: FC<TutorialItemProps> = ({ title, description, linkTo }) => {\r\n  const content = (\r\n    <div className=\"tutorial-item card\">\r\n      <div className=\"tutorial-content\">\r\n        <div className=\"tutorial-icon\">\r\n          <div className=\"tutorial-icon-triangle placeholder\"></div>\r\n          <div className=\"tutorial-icon-star placeholder\"></div>\r\n          <div className=\"tutorial-icon-square placeholder\"></div>\r\n        </div>\r\n        <div className=\"tutorial-info\">\r\n          <h3 className=\"tutorial-title\">{title}</h3>\r\n          <p className=\"tutorial-description text-light\">{description}</p>\r\n          <div className=\"tutorial-meta text-sm text-light\">\r\n          </div>\r\n        </div>\r\n        <div className=\"tutorial-play\">\r\n          {linkTo && (\r\n            <div className=\"arrow-icon\">\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                <path d=\"M5 12h14M12 5l7 7-7 7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (linkTo) {\r\n    return <Link to={linkTo} className=\"tutorial-item-link\">{content}</Link>;\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport default TutorialItem;","import React, { FC } from 'react';\r\n\r\ninterface ProcessItemProps {\r\n  hasOverlay?: boolean;\r\n  overlayText?: string;\r\n  imageSrc?: string;\r\n}\r\n\r\nconst ProcessItem: FC<ProcessItemProps> = ({ hasOverlay = false, overlayText = '', imageSrc }) => {\r\n  return (\r\n    <div className=\"process-item card\">\r\n      <div className=\"process-content\">\r\n        <div className=\"process-images\">\r\n          <div className=\"banner-image\">\r\n            {imageSrc ? (\r\n              <img \r\n                src={imageSrc} \r\n                alt=\"制作过程\"\r\n                loading=\"lazy\" // 懒加载优化\r\n              />\r\n            ) : (\r\n              <div className=\"image-placeholder\">\r\n                <div className=\"placeholder-icon\"></div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {hasOverlay && (\r\n          <div className=\"process-overlay\">\r\n            <span className=\"overlay-text\">{overlayText}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProcessItem;","import React, { FC } from 'react';\r\n\r\ninterface MemberItemProps {\r\n  name: string;\r\n  avatar?: string;\r\n  imageSrc?: string;\r\n}\r\n\r\nconst MemberItem: FC<MemberItemProps> = ({ name, avatar, imageSrc }) => {\r\n  // 优先使用 imageSrc，如果没有则使用 avatar\r\n  const imageSource = imageSrc || avatar;\r\n  \r\n  return (\r\n    <div className=\"member-item\">\r\n      <div className=\"member-avatar placeholder placeholder-circle\">\r\n        {imageSource ? (\r\n          <img src={imageSource} alt={name} />\r\n        ) : (\r\n          <div className=\"avatar-placeholder\">\r\n            <div className=\"avatar-icon triangle\"></div>\r\n            <div className=\"avatar-icon star\"></div>\r\n            <div className=\"avatar-icon square\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className=\"member-name text-sm text-center\">{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberItem;\r\n","import React, { FC } from 'react';\r\nimport { HeadFC, PageProps } from 'gatsby';\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\n\r\n// 导入自定义组件\r\nimport Layout from '../components/Layout'; // 页面整体布局组件\r\nimport Banner from '../components/Banner'; // 顶部横幅组件\r\nimport SectionHeader from '../components/SectionHeader'; // 各个内容区域的标题组件\r\nimport TutorialItem from '../components/TutorialItem'; // 教程列表项组件\r\nimport ProcessItem from '../components/ProcessItem'; // 制作过程列表项组件\r\nimport MemberItem from '../components/MemberItem'; // 项目成员列表项组件\r\n\r\nimport ProcessImage1 from '../images/process-image1.jpg';\r\nimport ProcessImage2 from '../images/process-image2.jpg';\r\nimport ProcessImage3 from '../images/process-image3.jpg';\r\nimport ProcessImage4 from '../images/process-image4.jpg';\r\nimport ProcessImage5 from '../images/process-image5.jpg';\r\nimport ProcessImage6 from '../images/process-image6.jpg';\r\n\r\ninterface Tutorial {\r\n  title: string;\r\n  description: string;\r\n  linkTo?: string;\r\n}\r\n\r\ninterface Member1 {\r\n  name: string;\r\n  avatar?: string;\r\n  imageSrc?: string;\r\n}\r\n\r\ninterface Member2 {\r\n  name: string;\r\n  avatar?: string;\r\n  imageSrc?: string;\r\n}\r\n\r\nconst IndexPage: FC<PageProps> = () => {\r\n  const tutorials: Tutorial[] = [\r\n    {\r\n      title: '使用教程',\r\n      description: '如何从0开始上手Pin Campus Book',\r\n      linkTo: '/tutorial'\r\n    },\r\n    {\r\n      title: '注意事项',\r\n      description: '你在使用前必须知道的一些小事',\r\n      linkTo: '/precautions'\r\n    }\r\n  ];\r\n\r\n  const members1: Member1[] = [\r\n    { name: '笛韵扬', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '周子涵', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '齐一舟', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '钟奕珈', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '钟阅旸', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '陈怡冰', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '汤恭恪', imageSrc: '' }  // 在这里填入图片路径\r\n  ];\r\n\r\n  const members2: Member2[] = [\r\n    { name: '王子琪', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '刘禹彤', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '吴瑜青', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '刘翼飞', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '戴梦瑶', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '张天祺', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '张雅捷', imageSrc: '' }, // 在这里填入图片路径\r\n    { name: '林弘扬', imageSrc: '' }  // 在这里填入图片路径\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"page-content\">\r\n        {/* Banner Section */}\r\n        <section className=\"banner-section mb-2xl\">\r\n          <Banner />\r\n        </section>\r\n\r\n        {/* Tutorial Section */}\r\n        <section className=\"tutorial-section mb-2xl\">\r\n          <SectionHeader title=\"教程\" showArrow={true} />\r\n          <div className=\"tutorial-list\">\r\n            {tutorials.map((tutorial, index) => (\r\n              <TutorialItem\r\n                key={index}\r\n                title={tutorial.title}\r\n                description={tutorial.description}\r\n                linkTo={tutorial.linkTo}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n\r\n        {/* Process Section */}\r\n        <section className=\"process-section mb-2xl\">\r\n          <SectionHeader title=\"制作过程\" showArrow={true} />\r\n          <div className=\"process-grid grid grid-3\">\r\n            {/* <ProcessItem imageSrc = '../images/process-image1.jpg' /> \r\n             <ProcessItem imageSrc = {withPrefix(ProcessImage2)}  />\r\n            <ProcessItem imageSrc = {withPrefix(ProcessImage3)}  /> \r\n            <ProcessItem imageSrc = {withPrefix(ProcessImage4)}  /> \r\n            <ProcessItem imageSrc = {withPrefix(ProcessImage5)}  /> \r\n            <ProcessItem imageSrc = {withPrefix(ProcessImage6)}  />  \r\n            <ProcessItem imageSrc = '../images/process-image1.jpg' />\r\n            <ProcessItem imageSrc = '../images/process-image1.jpg' /> \r\n            <ProcessItem imageSrc = '../images/process-image1.jpg'/> \r\n            <ProcessItem imageSrc = '../images/process-image1.jpg' /> \r\n            <ProcessItem imageSrc = '../images/process-image1.jpg' />  */}\r\n            <ProcessItem imageSrc={withPrefix(\"/images/process-image1.jpg\")} /> \r\n            <ProcessItem imageSrc={withPrefix(\"/images/process-image2.jpg\")} />\r\n            <ProcessItem imageSrc={withPrefix(\"/images/process-image3.jpg\")} /> \r\n            <ProcessItem imageSrc={withPrefix(\"/images/process-image4.jpg\")} /> \r\n            <ProcessItem imageSrc={withPrefix(\"/images/process-image5.jpg\")} /> \r\n            <ProcessItem imageSrc={withPrefix(\"/images/process-image6.jpg\")} />\r\n          </div>\r\n        </section>\r\n\r\n        {/* Members Section */}\r\n        <section className=\"members-section mb-2xl\">\r\n          <SectionHeader title=\"项目成员\" showArrow={true} />\r\n              <div className=\"members-list\">\r\n                {members1.map((member1, index) => (\r\n                  <MemberItem key={index} name={member1.name} avatar={member1.avatar} imageSrc={member1.imageSrc} />\r\n                ))}\r\n              </div>\r\n              <div className=\"members-list\">\r\n                {members2.map((member2, index) => (\r\n                  <MemberItem key={index} name={member2.name} avatar={member2.avatar} imageSrc={member2.imageSrc} />\r\n                ))}\r\n                </div>\r\n        </section>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const Head: HeadFC = () => (\r\n  <>\r\n    <title>Pin Campus Book</title>\r\n    <meta name=\"description\" content=\"上科大2025届新生纪念可交互礼物\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  </>\r\n);\r\n"],"names":["_ref","children","React","className","Banner","carouselImages","id","src","withPrefix","alt","currentImageIndex","setCurrentImageIndex","useState","useEffect","interval","setInterval","prevIndex","length","clearInterval","style","transform","transition","map","image","key","loading","onClick","goToPrevious","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","goToNext","_","index","goToSlide","title","showArrow","description","linkTo","content","Link","to","hasOverlay","overlayText","imageSrc","name","avatar","imageSource","IndexPage","Layout","SectionHeader","tutorial","TutorialItem","ProcessItem","member1","MemberItem","member2","Head"],"sourceRoot":""}